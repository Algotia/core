name: Release

on:
  push:
    branches:
      - master

jobs:
  build_and_test:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Setup Node.js environment
      uses: actions/setup-node@v1.4.2
    - name: Install dependencies
      run: npm ci
    - name: Build
      run: npm run build
    - name: Test
      run: npm t
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist/
  publish:
    name: Publish
    needs: build_and_test
    runs-on: ubuntu-latest
    outputs:
      changelog_changes: ${{ steps.bump_version.outputs.CHANGELOG_CHANGES }}
      package_version: ${{ steps.bump_version.outputs.PACKAGE_VERSION }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Bump version
      id: bump_version
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "GitHub Action"
        npx standard-version --prerelease 
    - name: Push bump artifacts
      run: git push --follow-tags
    - name: Download dist
      uses: actions/download-artifact@v2
      with:
        name: dist
    - name: Setup Node.js with NPM
      uses: actions/setup-node@v1.4.2
      with:
        registry-url: 'https://registry.npmjs.org'
        scope: 'algotia'
    - name: Publish to NPM
      id: publish_npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    - name: Setup Node.js with GPR
      uses: actions/setup-node@v1.4.2
      with:
        registry-url: 'https://npm.pkg.github.com/'
        scope: '@algotia'
    - name: Publish to GPR
      id: publish_gpr
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Create release body file
      run: |
        VERSION_NUMBER=$(cat VERSION.txt)
        sed -n "/${VERSION_NUMBER}/,\$p" > RELEASE_BODY.md  
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v$(cat VERSION.txt)"
        release_name: "v$(cat VERSION.txt)"
        body_path: RELEASE_BODY.md
        draft: false
        prerelease: true
