name: Release

on:
  push:
    branches:
      - master

jobs:
  check_version:
    name: Check if version was bumped
    runs-on: ubuntu-latest
    outputs:
        old_ver: ${{ steps.old_ver.outputs.version }}
        new_ver: ${{ steps.new_ver.outputs.version }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js environment
      uses: actions/setup-node@v2

    - name: Get last published version
      id: old_ver
      run: echo "::set-output name=version::$(npm view @algotia/core version)"
    - name: Get version from push
      id: new_ver
      run: echo "::set-output name=version::$(npm run get-version --silent)"
  publish:
    name: Publish to NPM and GPR
    runs-on: ubuntu-latest
    needs: check_version
    if: ${{ needs.check_version.outputs.old_ver != needs.check_version.outputs.new_ver }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Node.js environment
      uses: actions/setup-node@v2

    - name: Install dependencies
      run: npm ci

    - name: Build
      run: npm run build

    - name: Setup Node.js with NPM
      uses: actions/setup-node@v2
      with:
        registry-url: 'https://registry.npmjs.org'
        scope: 'algotia'

    - name: Publish to NPM
      id: publish_npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Setup Node.js with GPR
      uses: actions/setup-node@v2
      with:
        registry-url: 'https://npm.pkg.github.com/'
        scope: '@algotia'

    - name: Publish to GPR
      id: publish_gpr
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Tag release
      run: |
        git config --global user.email 'github-actions[bot]@users.noreply.github.com' 
        git config --global user.name 'github-actions[bot]'
        git tag -a v${{ needs.check_version.outputs.new_ver }} -m "chore(relase): release v${{ needs.check_version.outputs.new_ver }}"
        git push --follow-tags

    - name: Create Github release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: v${{ needs.check_version.outputs.new_ver }}
        release_name: Release ${{ needs.check_version.outputs.new_ver}}
        draft: false
        prerelease: true
